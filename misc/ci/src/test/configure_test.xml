<!-- ============================================================================
@description:  configure test
@author:       Ting YU 2016-11-29
============================================================================= -->

<project default="main" basedir="../../">       
   <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
         <pathelement location="${basedir}/lib/ant-contrib-1.0b2.jar" />
      </classpath>
   </taskdef>
   <taskdef name="staf" classname="com.ibm.staf.ant.taskdef.STAF" >
      <classpath>
         <pathelement location="${basedir}/lib/STAFAnt.jar" />
      </classpath>
   </taskdef>
   <import file="${basedir}/src/test/compile_testcase.xml" />
   <import file="${basedir}/src/test/distribute_testcase.xml" />
   <property file="${basedir}/src/conf/test.conf" /> 
   
   <target name="main">     
      <antcallback target="check_parameter" return="TESTCASE_TYPE, DEPLOY_MODE"/>
      
      <propertycopy name="testhost_list" from="${plat_form}_${TEST_TYPE}_${DEPLOY_MODE}_HOST" />          
      <property name="case_basedir" location="${WORKSPACE}/sequoiadb/testcase_configure" />
      <property name="testcase_outdir" location="${WORKSPACE}/tmp" />
      <property name="remote_casedir" location="${CI_WORK_DIR}/testcase" />
      
      <antcall target="ntpdate_time"/>
      
      <antcall target="ready_testcase"/>
      
      <antcall target="ready_lib"/>
      
      <antcall target="compile_testcase" />

      <antcall target="filter_testcase" />

      <antcall target="divide_testcase" />
      
      <antcall target="distribute_testcase" />
      
      <antcall target="execute_testcase" />
      
   </target>

   <target name="ntpdate_time">
      <hostinfo prefix="host" />
      <for list="${testhost_list}" param="testhost">
         <sequential>
            <staf location="@{testhost}" service="PROCESS"
                  request="START SHELL COMMAND ntpdate 192.168.20.11 WAIT 2m"
                  throwBuildException=""/>
         </sequential>
      </for>
   </target>
   
   <target name="check_parameter">  
      <if>
         <isset property="TESTCASE_TYPE"/>
         <else>           
            <var name="TESTCASE_TYPE" value="tdd_c,tdd_cpp,tdd_php,tdd_mongoc,
                                             story_java,story_js,
                                             sdv_java,sdv_js,
                                             driver_c,driver_cpp,driver_java,driver_php,driver_python" />
         </else>
      </if>
      <if>
         <isset property="DEPLOY_MODE"/>
         <else>
            <var name="DEPLOY_MODE" value="G3D3" />
         </else>
      </if>
   </target>
       
   <target name="ready_testcase">      
      <delete dir="${case_basedir}" failonerror="false" />
      <mkdir dir="${case_basedir}"/>
      <copy todir="${case_basedir}">
         <fileset dir="${WORKSPACE}/sequoiadb/testcase"/>
      </copy>
      
      <if>
         <equals arg1="${plat_form}" arg2="PPC" />
         <then>
            <delete dir="${case_basedir}/tdd/mongoc" />
         </then>
      </if>
   </target>
   
   <target name="ready_lib">
      <property name="client_dir" location="${WORKSPACE}/sequoiadb/client" />
      
      <delete dir="${client_dir}/include" failonerror="false" />
      <delete dir="${client_dir}/lib" failonerror="false" />
      <mkdir dir="${client_dir}/include"/>
      <mkdir dir="${client_dir}/lib"/>
      
      <copy todir="${client_dir}/include">
         <fileset dir="${INSTALL_DIR}/include" includes="**/*"/>
      </copy>
      <copy todir="${client_dir}/lib">
         <fileset dir="${INSTALL_DIR}/lib" includes="*.so,*.a"/>
      </copy>
   </target>
   
   <target name="compile_testcase">      
      <for list="${TESTCASE_TYPE}" param="casetype" trim="true" parallel="false">
         <sequential>
         <echo>******begin to compile @{casetype} testcase******</echo>
         <var name="case_reltdir" unset="true"/>
         <propertyregex property="case_reltdir" input="@{casetype}" regexp="_" replace="/"/>
         <switch value="@{casetype}">
            
            <case value="tdd_c">
               <compilecase type="c"      srcdir="${case_basedir}/${case_reltdir}"/>
            </case>
            <case value="driver_c">
               <compilecase type="c"      srcdir="${case_basedir}/${case_reltdir}"/>
            </case>
            
            <case value="tdd_mongoc">
               <compilecase type="mongoc" srcdir="${case_basedir}/${case_reltdir}"/>
            </case>
            
            <case value="tdd_cpp">
               <compilecase type="cpp"    srcdir="${case_basedir}/${case_reltdir}"/>
            </case>            
            <case value="driver_cpp">
               <compilecase type="cpp"    srcdir="${case_basedir}/${case_reltdir}"/>
            </case>
            
            <default/>
         </switch>
         </sequential>
      </for>
   </target>
   
   <target name="filter_testcase">
      <for list="${TESTCASE_TYPE}" param="casetype" trim="true" parallel="false">
         <sequential>    
         <echo>******begin to filter @{casetype} testcase******</echo>     
         <var name="case_reltdir" unset="true"/>
         <propertyregex property="case_reltdir" input="@{casetype}" regexp="_" replace="/"/> 
         <var name="case_dir" value="${case_basedir}/${case_reltdir}"/>      
         <filtercase casedir="${case_dir}" testtype="configure_test" selectedcaselist="${TESTCASE_LISTS}" casereltdir="${case_reltdir}"/>
         </sequential>
      </for>
   </target>
   
   <target name="divide_testcase">
      <delete dir="${testcase_outdir}" failonerror="false" />
      <mkdir dir="${testcase_outdir}"/>
      
      <for list="${TESTCASE_TYPE}" param="casetype" trim="true" parallel="false">
         <sequential>    
         <echo>******begin to divide @{casetype} testcase******</echo>
         
         <var name="case_reltdir" unset="true"/>
         <propertyregex property="case_reltdir" input="@{casetype}" regexp="_" replace="/"/>
         <var name="case_dir" value="${case_basedir}/${case_reltdir}"/>

         <switch value="@{casetype}">
            <default>              
               <move todir="${testcase_outdir}/testcase_serial">
                  <fileset dir="${case_basedir}" includes="${case_reltdir}/**/*"/>
               </move>
            </default>
         </switch>
         </sequential>
      </for>

      <if>
         <available file="${testcase_outdir}/testcase_serial" type="dir" property="serial_exist" />
         <then>
            <propertyregex property="firsthost" input="${testhost_list}" regexp=",(.*)" replace="" defaultValue="${testhost_list}"/>
            <move todir="${testcase_outdir}/testcase_${firsthost}">
               <fileset dir="${testcase_outdir}/testcase_serial" />
            </move>
         </then>
      </if>
      
      <!--copy tools-->
      <for list="${testhost_list}" param="testhost" parallel="false">
         <sequential>
            <copy todir="${testcase_outdir}/testcase_@{testhost}">
               <fileset dir="${case_basedir}" includes="tools/**/*,testcase-base/**/*"/>
            </copy>
         </sequential>
      </for>
      
   </target>
   
   <target name="distribute_testcase">     
      <for list="${testhost_list}" param="testhost" parallel="false">
         <sequential>            
            <var name="tar_srcdir" value="${testcase_outdir}/testcase_@{testhost}" />
            <var name="tar_desdir" value="${testcase_outdir}" />
            <var name="tar_filename" value="testcase_@{testhost}.tar.gz" />          
            
            <staf location="@{testhost}" service="FS"
                        request="DELETE ENTRY ${CI_WORK_DIR} RECURSE CONFIRM"
                        throwBuildException=""/>
            <staf location="@{testhost}" service="FS"
                        request="CREATE DIRECTORY ${CI_WORK_DIR} FULLPATH"
                        throwBuildException="1"/>
                        
            <if>
               <available file="${tar_srcdir}" type="dir" property="srcdir_exist" />
               <then>
                  <!--tar-->
                  <delete file="${tar_desdir}/${tar_filename}" failonerror="false"/>
                  <tar destfile="${tar_desdir}/${tar_filename}" longfile="gnu"
                       basedir="${tar_srcdir}" compression="gzip" />
                  <!--send-->                  
                  <staf location="@{testhost}" service="FS"
                        request="CREATE DIRECTORY ${remote_casedir} FULLPATH"
                        throwBuildException="1"/>
                  <staf location="local" service="FS"
                        request="COPY FILE ${tar_desdir}/${tar_filename} TODIRECTORY ${remote_casedir} TOMACHINE @{testhost}"
                        throwBuildException="1"/>
                  <!--untar-->
                  <staf location="@{testhost}" service="PROCESS"
                        request="START SHELL COMMAND tar zxvf ${remote_casedir}/${tar_filename} -C ${remote_casedir} WAIT 10m RETURNSTDERR"
                        throwBuildException="1"/>
                  <staf location="@{testhost}" service="FS"
                        request="DELETE ENTRY  ${remote_casedir}/${tar_filename} RECURSE CONFIRM"
                        throwBuildException=""/>
               </then>
            </if>           
         </sequential>
      </for>
   </target>

   <target name="execute_testcase">
      <var name="testscript_dir" value="${CI_WORK_DIR}/script/src/test" />     
      <var name="testscript_log" value="${testscript_dir}/configure_test.log" />
      
      <!--ready in remote host-->
      <for list="${testhost_list}" param="testhost" parallel="true">
         <sequential>            
            <staf location="local" service="FS"
                  request="COPY DIRECTORY ${basedir} TODIRECTORY ${CI_WORK_DIR}/script TOMACHINE @{testhost} RECURSE"
                  throwBuildException="1"/>
            <staf location="@{testhost}" service="FS"
                  request="DELETE ENTRY ${testscript_log} CONFIRM"/>
            <staf location="@{testhost}" service="PROCESS"
                  request="START SHELL COMMAND chown -R ${user.name} ${CI_WORK_DIR} WAIT 10m RETURNSTDERR"
                  throwBuildException="1"/>
            <staf location="@{testhost}" service="PROCESS"
                  request="START SHELL COMMAND chmod -R 777 ${INSTALL_DIR}/python WAIT 10m RETURNSTDERR"
                  throwBuildException="1"/>
         </sequential>
      </for>
      
      <!--execute testcase in local host-->
      <delete dir="${WORKSPACE}/report"/>
      <!--execute testcase in remote host-->
      <var name="test_remote_cmd" value="ant -f ${testscript_dir}/configure_test.xml exec_remote_testcase -DTEST_TYPE=${TEST_TYPE} -DTESTCASE_TYPE=${TESTCASE_TYPE} 
                                         -DWORKSPACE=${WORKSPACE} -DCI_WORK_DIR=${CI_WORK_DIR} 
                                        -Dplat_form=${plat_form} -DDEPLOY_MODE=${DEPLOY_MODE} -DBUILD_NUMBER=${BUILD_NUMBER}" />
      <staf location="local" service="PROCESS"                  
            request="START SHELL COMMAND echo 'exec: ${test_remote_cmd}, in host: local' >> ${testscript_log}  WAIT 10m"
            throwBuildException="1"/>
                  
      <staf location="local" service="PROCESS"
            resultPrefix="remote_exec"
            request="START SHELL COMMAND ${test_remote_cmd} STDOUTAPPEND ${testscript_log} STDERRTOSTDOUT WAIT"
            throwBuildException="1"/>
      <propertyregex property="remote_exec_rc" input="${remote_exec.result}" regexp="Return\ Code:\ (.*)\n" select="\1"/>      
      <staf location="local" service="FS"
            request="GET FILE ${testscript_log} TEXT"
            throwBuildException="1"/>
            
      <if>
         <equals arg1="${remote_exec_rc}" arg2="0" />
         <else>
            <fail message="exec: ${test_remote_cmd}, in host: local, return code: ${remote_exec_rc}"/>
         </else>
      </if>
   </target>
   
   <target name="exec_remote_testcase">
      <property name="report_basedir" value="${CI_WORK_DIR}/report" />
      <delete dir="${report_basedir}"/>
      <mkdir dir="${report_basedir}"/>
      
      <mkdir dir="${CI_WORK_DIR}/testcase"/>
      <for param="casetype">
         <path>
            <dirset dir="${CI_WORK_DIR}/testcase" includes="*" excludes="tools"/>
         </path>
         <sequential>
            <for param="casesubtype">
               <path>
                  <dirset dir="@{casetype}" includes="*"/>
               </path>
               <sequential>
               
                  <var name="testcase_totaltype" unset="true"/>
                  <basename property="testcase_totaltype" file="@{casetype}"/>
                  <var name="testcase_subtype" unset="true"/>
                  <basename property="testcase_subtype" file="@{casesubtype}"/>
                  <var name="testcase_type" value="${testcase_totaltype}_${testcase_subtype}"/>
                  
                  
                  <switch value="${testcase_type}">
                  
                     <case value="tdd_c">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_c_case.xml"/>
                     </case>
                     <case value="tdd_cpp">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_c_case.xml"/>
                     </case>
                     <case value="driver_c">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_c_case.xml"/>
                     </case>
                     <case value="driver_cpp">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_c_case.xml"/>
                     </case>
                     
                     <case value="story_java">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_java_case.xml"/>
                     </case>
                     <case value="sdv_java">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_java_case.xml"/>
                     </case>
                     <case value="driver_java">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_java_case.xml"/>
                     </case>
                     
                     <case value="s3_java">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_java_case.xml"/>
                     </case>
                     
                     <case value="story_js">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_js_case.xml"/>
                     </case>
                     <case value="sdv_js">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_js_case.xml"/>
                     </case>
                     
                     <case value="tdd_php">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_php_case.xml"/>
                     </case>
                     <case value="driver_php">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_php_case.xml"/>
                     </case>

                     <case value="driver_python">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_python_case_new.xml"/>
                     </case>
                     
                     <case value="tdd_mongoc">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_mongoc_case.xml"/>
                     </case>
                     
                     <default>
                     </default>
                 
                  </switch>
                  
                  <ant antfile="${exec_file}" inheritAll="false">
                     <property name="TEST_TYPE" value="${TEST_TYPE}"/>
                     <property name="TESTCASE_TYPE" value="${testcase_type}"/>
                     <property name="testcase_dir" value="@{casesubtype}"/>
                     <property name="report_dir" value="${report_basedir}/${testcase_type}" />
                     <property name="plat_form" value="${plat_form}"/>
                     <property name="DEPLOY_MODE" value="${DEPLOY_MODE}"/>
                     <property name="BUILD_NUMBER" value="${BUILD_NUMBER}"/>
                  </ant>
               </sequential>
            </for>           
         </sequential>
      </for>
      
      <copy todir="${WORKSPACE}/report">
         <fileset dir="${CI_WORK_DIR}/report"/>
      </copy>
   </target>

</project>