<!-- ============================================================================
@description:  exec java testcase, junit or testng
@parameter:    TEST_TYPE              eg: CONFIGURETEST
               testcase_type          eg: tdd_c
               testcase_dir           eg: /tmp/ci/testcase/tdd/c
               report_dir             egï¼š/tmp/ci/report/tdd_c
@author:       Ting YU 2016-11-2
============================================================================= -->

<project default="exec_java_testcase" basedir="../../../">     
   <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
         <pathelement location="${basedir}/lib/ant-contrib-1.0b2.jar" />
      </classpath>
   </taskdef>
   <import file="${basedir}/src/test/exec_testcase/common.xml" />
   
   <target name="exec_java_testcase">
      <property file="${basedir}/src/conf/test.conf" />
      <mkdir dir="${report_dir}"/>
      <for param="fullfilename">
         <path>
            <fileset dir="${INSTALL_DIR}/java" includes="sequoiadb-driver-*.jar"/>
         </path>
         <sequential>
            <propertyregex property="tmpversion" input="@{fullfilename}" regexp="${INSTALL_DIR}/java/sequoiadb-driver-(.*).jar" select="\1" casesensitive="false"/>
         </sequential>
      </for>
      <if>
         <equals arg1="${TEST_TYPE}" arg2="CONFIGURETEST"/>
         <then>
            <replaceregexp file="${testcase_dir}/configure.xml"
                           match='"CONFTOOL"(.*)value="(.*)"' 
                           replace='"CONFTOOL"\1value="${testcase_dir}/../../tools/changeConf.js"' 
                           flags="g" 
                           byline="true" 
                           encoding="utf-8"/>
         </then>
      </if>
      <if>
         <equals arg1="${TEST_TYPE}" arg2="RELIABILITYTEST"/>
         <then>
            <propertyregex property="firsthost" input="${testhost_list}" regexp=",(.*)" replace="" defaultValue="${testhost_list}"/>
            <ant antfile="${testcase_dir}/../../../testcase/tools/runtest_java.xml" target="exec_testcase">
               <property name="casedir" value="${testcase_dir}"/>
               <property name="reportdir" value="${report_dir}"/>
               <property name="serial_number" value="${serial_number}"/>
               <property name="sdbdriver" value="${tmpversion}" />
               <property name="sdbdriverDir" value="${INSTALL_DIR}/java" />
               <property name="hostname" value="${firsthost}"/>
               <property name="svcname" value="${SVCNAME}"/>
               <property name="eshostname" value="${ES_IP}"/>
               <property name="essvcname" value="${ES_PORT_CLIENT}"/>
            </ant>
         </then>
         <else>
            <if>
               <and>
                  <equals arg1="${TEST_TYPE}" arg2="SYNCTEST"/>
                  <equals arg1="${BREAK_ON_FAILURE}" arg2="true"/>
               </and>
               <then>
                  <replace file="${testcase_dir}/sync.xml" 
                           token="stop-all-when-occur-failure=&quot;false&quot;" 
                           value="stop-all-when-occur-failure=&quot;true&quot;"/>
               </then>
            </if>
            <ant antfile="${testcase_dir}/../../tools/runtest_java.xml" target="exec_testcase">
               <property name="casedir" value="${testcase_dir}"/>
               <property name="testcasetype" value="${testcase_type}"/>
               <property name="reportdir" value="${report_dir}"/>
               <property name="sdbdriver" value="${tmpversion}" />
               <property name="sdbdriverDir" value="${INSTALL_DIR}/java" />
               <property name="hostname" value="localhost"/>
               <property name="svcname" value="${SVCNAME}"/>
               <property name="eshostname" value="${ES_IP}"/>
               <property name="essvcname" value="${ES_PORT_CLIENT}"/>
               <property name="s3svcname" value="${S3SVCNAME}"/>
            </ant>
         </else>
      </if>
      <if>
         <available file="${testcase_dir}/output/junitreports" type="dir"/>
         <then>
            <copy todir="${report_dir}">
               <fileset dir="${testcase_dir}/output/junitreports"/>
            </copy> 
            <modifytestngreport reportdir="${report_dir}" layer="${testcase_type}"/>
         </then>
      </if>
      
      <if>
         <available file="${testcase_dir}/output/junitreports" type="dir"/>
         <then>
            <countstr str="&lt;/failure&gt;" resultproperty="fail_end_num">
               <path-elements>
                  <fileset dir="${testcase_dir}/output/junitreports" includes="**/*.xml"/>
               </path-elements>
            </countstr>
         </then>
         <else>
            <var name="fail_end_num" value="0"/>
         </else>
      </if>

      <if>
         <and>
            <equals arg1="${BREAK_ON_FAILURE}" arg2="true"/>
            <not>
               <equals arg1="${fail_end_num}" arg2="0"/>
            </not>
         </and>
         <then>
            <touch file="${report_dir}/.TESTCASE_FAIL"/>
         </then>
      </if>   
   </target>
 
   <macrodef name="modifytestngreport">
      <attribute name="reportdir"/>
      <attribute name="layer" />
      <sequential>
         <property file="${basedir}/src/conf/test.conf" />
         
         <propertycopy name="testhost_list" from="${plat_form}_${TEST_TYPE}_${DEPLOY_MODE}_HOST" />
         <var name="cluster_host_info" value=""/>
         <for list="${testhost_list}" param="testhost">
            <sequential>
               <hostinfo prefix="prefix@{testhost}" host="@{testhost}"/>
               <var name="cluster_host_info" value="${cluster_host_info} @{testhost}/${prefix@{testhost}.ADDR4}"/>
            </sequential>
         </for>
         
         
         <hostinfo prefix="host" />
         <var name="ms1" value="EXECUTE HOST: ${host.NAME}/${host.ADDR4}&#10;&#10;"/>    
         <var name="ms2" value="CLUSTER HOST:${cluster_host_info}&#10;&#10;"/>            
         <var name="backup_reltdir" value="${TEST_TYPE}_${DEPLOY_MODE}_${BUILD_NUMBER}.tar.gz"/>
         <var name="download_url" value="&#10;DOWNLOAD DIAGLOG :&#10;http://192.168.30.185:8081/${backup_reltdir}&#10;" />
         <replaceregexp match='&lt;\/failure&gt;' 
                        replace='${download_url}&lt;\/failure&gt;' 
                        flags="g" 
                        byline="true" 
                        encoding="utf-8">
            <fileset dir="@{reportdir}" includes="**/*"/>
         </replaceregexp>
         <replaceregexp match='&lt;failure(.*)&gt;' 
                        replace='&lt;failure\1&gt;      ${ms1}      ${ms2}' 
                        flags="g" 
                        byline="true" 
                        encoding="utf-8">
            <fileset dir="@{reportdir}" includes="**/*"/>
         </replaceregexp>
         <replaceregexp match='&lt;\/error&gt;' 
                        replace='${download_url}&lt;\/error&gt;' 
                        flags="g" 
                        byline="true" 
                        encoding="utf-8">
            <fileset dir="@{reportdir}" includes="**/*"/>
         </replaceregexp>
         <replaceregexp match='&lt;error(.*)&gt;' 
                        replace='&lt;error\1&gt;      ${ms1}      ${ms2}' 
                        flags="g" 
                        byline="true" 
                        encoding="utf-8">
            <fileset dir="@{reportdir}" includes="**/*"/>
         </replaceregexp>
         <replaceregexp match='testsuite(.*)name="com\.sequoiadb\.(.*?)\.(.*)"' 
                        replace='testsuite\1name="\2"' 
                        flags="g" 
                        byline="true" 
                        encoding="utf-8">
            <fileset dir="@{reportdir}" includes="**/*"/>
         </replaceregexp>
         <replaceregexp match='classname="com\.sequoiadb\.(.*)"' 
                        replace='classname="@{layer}.\1"' 
                        flags="g" 
                        byline="true" 
                        encoding="utf-8">
            <fileset dir="@{reportdir}" includes="**/*"/>
         </replaceregexp>
         <replaceregexp match='classname="com\.sequoiadb\.(.*)"' 
                        replace='classname="@{layer}.\1"' 
                        flags="g" 
                        byline="true" 
                        encoding="utf-8">
            <fileset dir="@{reportdir}" includes="**/*"/>
         </replaceregexp>
         <replaceregexp match='name="(.*)"(.*)classname="@{layer}\.(.*?)\.(.*)"' 
                        replace='name="\4.\1"\2classname="@{layer}.\3"' 
                        flags="g" 
                        byline="true" 
                        encoding="utf-8">
            <fileset dir="@{reportdir}" includes="**/*"/>
         </replaceregexp>
      </sequential>
   </macrodef>
   
   <macrodef name="countstr">
      <attribute name="resultproperty"/>
      <attribute name="str"/>
      <element name="path-elements"/>
      <sequential>
         <var name="@{resultproperty}" unset="true"/>
         <resourcecount property="@{resultproperty}">
         <tokens>
            <concat>
               <filterchain>
                  <tokenfilter>
                     <containsstring contains="@{str}"/>
                  </tokenfilter>
               </filterchain>
               <path-elements/>
            </concat>
         </tokens>
         </resourcecount>
      </sequential>
   </macrodef>
</project>