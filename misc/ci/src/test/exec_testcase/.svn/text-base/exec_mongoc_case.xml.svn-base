<!-- ============================================================================
@description:  execute mongoc testcase
@parameter:    TEST_TYPE              eg: CONFIGURETEST
               testcase_type          eg: tdd_c
               testcase_dir           eg: /tmp/ci/testcase/tdd/c
               report_dir             egï¼š/tmp/ci/report/tdd_c
@author:       Ting YU 2016-12-21
============================================================================= -->

<project default="exec_mongoc_testcase" basedir="../../../">     
   <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
         <pathelement location="${basedir}/lib/ant-contrib-1.0b2.jar" />
      </classpath>
   </taskdef>
   <import file="${basedir}/src/test/exec_testcase/common.xml" />
   
   <target name="exec_mongoc_testcase">
      <property file="${basedir}/src/conf/test.conf" />
      
      <mkdir dir="${report_dir}"/>
      <chmod dir="${testcase_dir}" perm="u+x" includes="*" />
      <var name="testcase_name" value="test-mongo"/>
      
      <!--before excute-->
      <var name="begin_time" unset="true"/>
      <tstamp>
         <format property="begin_time" pattern="yyyy-MM-dd_HH:mm:ss" />
      </tstamp>
      
      <!--excute-->      
      
      <echo>export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${testcase_dir}/lib</echo>
      <echo>export MONGOC_TEST_HOST=localhost:11817</echo>

      <if>
         <equals arg1="${TEST_TYPE}" arg2="SYNCTEST"/>
         <then>
            <execsynctestcase testcasedir="${testcase_dir}"
                              ldlibrarypath="${LD_LIBRARY_PATH}"
                              reportdir="${report_dir}"
                              testcasetype="${testcase_type}"/>
         </then>
         <else>
            <hostinfo prefix="host" />
            <var name="report_fullname" value="${report_dir}/${testcase_name}_${host.NAME}.xml"/>
            <markinlog casename ="${testcase_dir}/${testcase_name}" marktype="begin"/>
            <echo>exec cmd: ${testcase_dir}/test-mongo -f -F ${report_fullname}</echo>
            <var name="screen_output" unset="true"/>
            <exec executable="./test-mongo" 
                  dir="${testcase_dir}" 
                  timeout="1200000" 
                  outputproperty="screen_output" 
                  resultproperty="rc" 
                  failonerror="false">
               <arg line=" -f -F ${report_fullname}" />
               <env key="LD_LIBRARY_PATH" path="${LD_LIBRARY_PATH}:${testcase_dir}/lib" />       
               <env key="MONGOC_TEST_HOST" value="localhost:11817" />
            </exec>
            <markinlog casename ="${testcase_dir}/test-mongo" marktype="end"/>
         </else>
      </if>
      
      <echo message="${screen_output}" />

      <!--after excute-->
      
      <var name="end_time" unset="true"/>
      <tstamp>
         <format property="end_time" pattern="yyyy-MM-dd_HH:mm:ss" />
      </tstamp>
      <echo message="begin at ${begin_time}, end at ${end_time}" />
      
      <modifyreport report="${report_fullname}" layer="${testcase_type}.${testcase_name}_parallel" />
   </target>
   
   <macrodef name="execsynctestcase">
      <attribute name="testcasedir"/>
      <attribute name="ldlibrarypath"/>
      <attribute name="reportdir"/>
      <attribute name="testcasetype"/>
      <sequential>
         <var name="processrc" value="0"/>
         
         <propertyregex property="casetypedir" input="@{testcasetype}" regexp="_" replace="/"/> 
         <property file="${CI_WORK_DIR}/testcase/${casetypedir}/testcase.conf"/>
         <for list="${sync_list}" param="casefullname">
            <sequential>
               <var name="is_continue_exec" unset="true"/>
               <condition property="is_continue_exec" value="true" else="false">
                  <or>
                     <equals arg1="${BREAK_ON_FAILURE}" arg2="false"/>
                     <and>
                        <equals arg1="${BREAK_ON_FAILURE}" arg2="true"/>
                        <equals arg1="${processrc}" arg2="0"/>
                     </and>
                  </or>
               </condition>
               <if>
                  <equals arg1="${is_continue_exec}" arg2="true"/>
                  <then>
                     <processonecase pcsrc="processrc" 
                                     testcasedir="@{testcasedir}"
                                     testcasename="@{casefullname}"
                                     ldlibrarypath="@{ldlibrarypath}"
                                     reportdir="@{reportdir}"
                                     testcasetype="@{testcasetype}"/>
                  </then>
               </if>
            </sequential>
         </for>
         <if>
            <equals arg1="${is_continue_exec}" arg2="false"/>
            <then>
               <touch file="@{reportdir}/.TESTCASE_FAIL"/>
            </then>
         </if>
      </sequential>
   </macrodef>
   
   <macrodef name="processonecase">
      <attribute name="pcsrc"/>
      <attribute name="testcasedir"/>
      <attribute name="testcasename"/>
      <attribute name="ldlibrarypath"/>
      <attribute name="reportdir"/>
      <attribute name="testcasetype"/>
      <sequential>
         
         <detectenv envisok="envrc" casetype="@{testcasetype}" casename="@{testcasename}"
           rptfullname="@{reportdir}/before_${testcasetype}_${testcasename}.xml" />
         <if>
            <and>
               <equals arg1="${BREAK_ON_FAILURE}" arg2="true"/>
               <not>
                  <equals arg1="${envrc}" arg2="0"/>
               </not>
            </and>
            <else>
               <hostinfo prefix="host" />
               <var name="report_fullname" value="@{reportdir}/test-mongo_@{testcasename}_${host.NAME}.xml"/>
               <markinlog casename ="@{testcasedir}/@{testcasename}" marktype="begin"/>
               <echo>exec cmd: @{testcasedir}/test-mongo -f -p -l @{testcasename} ${report_fullname}</echo>
               <var name="screen_output" unset="true"/>
               <exec executable="./test-mongo" 
                     dir="@{testcasedir}" 
                     timeout="1200000" 
                     outputproperty="screen_output" 
                     resultproperty="rc" 
                     failonerror="false">
                  <arg line=" -f -p -l @{testcasename} ${report_fullname}" />
                  <env key="LD_LIBRARY_PATH" path="@{ldlibrarypath}:@{testcasedir}/lib" />       
                  <env key="MONGOC_TEST_HOST" value="localhost:11817" />
               </exec>
               <markinlog casename ="@{testcasedir}/test-mongo" marktype="end"/>
            </else>
         </if>
         
         <var name="@{pcsrc}" unset="true"/>
         <condition property="@{pcsrc}" value="0" else="1">
            <and>
               <equals arg1="${envrc}" arg2="0"/>
               <equals arg1="${caserc}" arg2="0"/>
            </and>
         </condition>
      </sequential>
   </macrodef>
    
   <macrodef name="modifyreport">
      <attribute name="report"/>
      <attribute name="layer" />
      <sequential>  
      
         <propertycopy name="testhost_list" from="${plat_form}_${TEST_TYPE}_${DEPLOY_MODE}_HOST" />
         <var name="cluster_host_info" value=""/>
         <for list="${testhost_list}" param="testhost">
            <sequential>
               <hostinfo prefix="prefix@{testhost}" host="@{testhost}"/>
               <var name="cluster_host_info" value="${cluster_host_info} @{testhost}/${prefix@{testhost}.ADDR4}"/>
            </sequential>
         </for>
      
         <hostinfo prefix="host" />
         <var name="ms1" value="EXECUTE HOST: ${host.NAME}/${host.ADDR4}&#10;&#10;"/>      
         <var name="ms2" value="CLUSTER HOST:${cluster_host_info}&#10;&#10;"/> 
         <replaceregexp file="@{report}" 
                        match='&lt;failure(.*)&gt;' 
                        replace='&lt;failure\1&gt;&#10;${ms1}${ms2}' 
                        flags="g" 
                        byline="true" 
                        encoding="utf-8"/>
         <replaceregexp file="@{report}" 
                        match='testcase name' 
                        replace='testcase classname="@{layer}" name'  
                        flags="g" 
                        byline="true" 
                        encoding="utf-8"/> 
         <var name="backup_reltdir" value="${TEST_TYPE}_${DEPLOY_MODE}_${BUILD_NUMBER}.tar.gz"/>
         <var name="download_url" value="&#10;DOWNLOAD DIAGLOG :&#10;http://192.168.30.185:8081/${backup_reltdir}&#10;" />
         <replaceregexp file="@{report}" 
                        match='&lt;\/failure&gt;' 
                        replace='${download_url}&lt;\/failure&gt;'  
                        flags="g" 
                        byline="true" 
                        encoding="utf-8"/>
      </sequential>
   </macrodef>
   
</project>
