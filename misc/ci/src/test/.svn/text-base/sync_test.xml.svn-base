<!-- ============================================================================
@description:  sync test
@author:       Siqin Chen 2017-02-14
============================================================================= -->
<project default="main" basedir="../../">
   <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
         <pathelement location="${basedir}/lib/ant-contrib-1.0b2.jar" />
      </classpath>
   </taskdef>
   <taskdef name="staf" classname="com.ibm.staf.ant.taskdef.STAF" >
      <classpath>
         <pathelement location="${basedir}/lib/STAFAnt.jar" />
      </classpath>
   </taskdef>
   
   <import file="${basedir}/src/test/compile_testcase.xml" />
   <import file="${basedir}/src/test/distribute_testcase.xml" />
   <property file="${basedir}/src/conf/test.conf" /> 
   <target name="main">
      <antcallback target="check_parameter" return="TESTCASE_TYPE, DEPLOY_MODE"/>
      
      <propertycopy name="testhost_list" from="${plat_form}_${TEST_TYPE}_${DEPLOY_MODE}_HOST" />          
      <property name="case_basedir" location="${WORKSPACE}/sequoiadb/testcase_sync" />
      
      <antcall target="ntpdate_time"/>
      
      <antcall target="ready_testcase"/>

      <antcall target="ready_lib"/>
      
      <antcall target="compile_testcase" />

      <antcall target="filter_testcase" />
      
      <antcall target="distribute_testcase"/>
      
      <antcall target="execute_testcase"/>
      
   </target>
   
   <target name="ntpdate_time">
      <hostinfo prefix="host" />
      <for list="${testhost_list}" param="testhost">
         <sequential>
            <staf location="@{testhost}" service="PROCESS"
                  request="START SHELL COMMAND ntpdate 192.168.20.11 WAIT 2m"
                  throwBuildException=""/>
         </sequential>
      </for>
   </target>
   
   <target name="ready_testcase">      
      <delete dir="${case_basedir}" failonerror="false" />
      <mkdir dir="${case_basedir}"/>
      <delete dir="${WORKSPACE}/sequoiadb/testcase/user scenario" failonerror="false" />
      <copy todir="${case_basedir}">
         <fileset dir="${WORKSPACE}/sequoiadb/testcase"/>
      </copy>
      <if>
         <equals arg1="${plat_form}" arg2="PPC" />
         <then>
            <delete dir="${case_basedir}/tdd/mongoc" />
         </then>
      </if>
   </target>

   <target name="ready_lib">
      <property name="client_dir" location="${WORKSPACE}/sequoiadb/client" />
      
      <delete dir="${client_dir}/include" failonerror="false" />
      <delete dir="${client_dir}/lib" failonerror="false" />
      <mkdir dir="${client_dir}/include"/>
      <mkdir dir="${client_dir}/lib"/>
      
      <copy todir="${client_dir}/include">
         <fileset dir="${INSTALL_DIR}/include" includes="**/*"/>
      </copy>
      <copy todir="${client_dir}/lib">
         <fileset dir="${INSTALL_DIR}/lib" includes="*.so,*.a"/>
      </copy>
   </target>

   <target name="compile_testcase">      
      <for list="${TESTCASE_TYPE}" param="casetype" trim="true" parallel="false">
         <sequential>
         <echo>******begin to compile @{casetype} testcase******</echo>
         <var name="case_reltdir" unset="true"/>
         <propertyregex property="case_reltdir" input="@{casetype}" regexp="_" replace="/"/>
         <switch value="@{casetype}">
            
            <case value="tdd_c">
               <compilecase type="c"      srcdir="${case_basedir}/${case_reltdir}"/>
            </case>
            <case value="driver_c">
               <compilecase type="c"      srcdir="${case_basedir}/${case_reltdir}"/>
            </case>
            
            <case value="tdd_mongoc">
               <compilecase type="mongoc" srcdir="${case_basedir}/${case_reltdir}"/>
            </case>
            
            <case value="tdd_cpp">
               <compilecase type="cpp"    srcdir="${case_basedir}/${case_reltdir}"/>
            </case>            
            <case value="driver_cpp">
               <compilecase type="cpp"    srcdir="${case_basedir}/${case_reltdir}"/>
            </case>
            
            <default/>
         </switch>
         </sequential>
      </for>
   </target>

   <target name="filter_testcase">
      <for list="${TESTCASE_TYPE}" param="casetype" trim="true" parallel="false">
         <sequential>    
            <echo>******begin to filter @{casetype} testcase******</echo>     
            <var name="case_reltdir" unset="true"/>
            <propertyregex property="case_reltdir" input="@{casetype}" regexp="_" replace="/"/> 
            <var name="case_dir" value="${case_basedir}/${case_reltdir}"/>      
            <filtercase casedir="${case_dir}" testtype="sync_test" selectedcaselist="${TESTCASE_LISTS}" casereltdir="${case_reltdir}"/>
         </sequential>
      </for>
   </target>
      
   <target name="distribute_testcase">
      <delete dir="${CI_WORK_DIR}/testcase" failonerror="false" />
      
      <for list="${testhost_list}" param="tmphost" parallel="false">
         <sequential> 
            <staf location="local" service="FS"
                  request="COPY DIRECTORY ${case_basedir} TODIRECTORY ${CI_WORK_DIR}/testcase TOMACHINE @{tmphost} RECURSE"
                  throwBuildException="1"/>
         </sequential> 
      </for>
   </target>
   
   <target name="execute_testcase">
      <var name="testscript_dir" value="${CI_WORK_DIR}/script/src/test" />     
      <var name="testscript_log" value="${testscript_dir}/sync_test.log" />
      <hostinfo prefix="host" />
      <!--ready in remote host-->
      <for list="${testhost_list}" param="testhost" parallel="true">
         <sequential>            
            <staf location="local" service="FS"
                  request="COPY DIRECTORY ${basedir} TODIRECTORY ${CI_WORK_DIR}/script TOMACHINE @{testhost} RECURSE"
                  throwBuildException="1"/>
            <staf location="@{testhost}" service="FS"
                  request="DELETE ENTRY ${testscript_log} CONFIRM"/>
         </sequential>
      </for>
      
      <delete dir="${WORKSPACE}/report"/>
      
      <!--execute testcase in remote host-->
      <var name="test_remote_cmd" value="ant -f ${testscript_dir}/sync_test.xml exec_remote_testcase -DTEST_TYPE=${TEST_TYPE} -DTESTCASE_TYPE=${TESTCASE_TYPE} 
                                        -DBREAK_ON_FAILURE=${BREAK_ON_FAILURE} -DWORKSPACE=${WORKSPACE} -DCI_WORK_DIR=${CI_WORK_DIR} 
                                        -Dplat_form=${plat_form} -DDEPLOY_MODE=${DEPLOY_MODE} -DBUILD_NUMBER=${BUILD_NUMBER}" />
      <for list="${testhost_list}" param="testhost" parallel="false">
         <sequential>
         
            <if>
               <equals arg1="@{testhost}" arg2="${host.NAME}"/>
               <then>
                  <staf location="@{testhost}" service="PROCESS"                  
                        request="START SHELL COMMAND echo 'exec: ${test_remote_cmd}, in host: @{testhost}' >> ${testscript_log}  WAIT 10m"
                        throwBuildException="1"/>
                              
                  <staf location="@{testhost}" service="PROCESS"
                        resultPrefix="remote_exec"
                        request="START SHELL COMMAND ${test_remote_cmd} STDOUTAPPEND ${testscript_log} STDERRTOSTDOUT WAIT"
                        throwBuildException="1"/>
                  <propertyregex property="remote_exec_rc" input="${remote_exec.result}" regexp="Return\ Code:\ (.*)\n" select="\1"/>      
                  <staf location="@{testhost}" service="FS"
                        request="GET FILE ${testscript_log} TEXT"
                        throwBuildException="1"/>
                        
                  <if>
                     <equals arg1="${remote_exec_rc}" arg2="0" />
                     <else>
                        <fail message="exec: ${test_remote_cmd}, in host: @{testhost}, return code: ${remote_exec_rc}"/>
                     </else>
                  </if>

               </then>
            </if>            
         </sequential>
      </for>
   </target>
   
   <target name="exec_remote_testcase">

      
      <property name="report_basedir" value="${CI_WORK_DIR}/report" />
      <delete dir="${report_basedir}"/>
      <mkdir dir="${report_basedir}"/>
   
      <for param="casetype">
         <path>
            <dirset dir="${CI_WORK_DIR}/testcase" includes="*" excludes="tools"/>
         </path>
         <sequential>
            <for param="casesubtype">
               <path>
                  <dirset dir="@{casetype}" includes="*"/>
               </path>
               <sequential>
                  <var name="testcase_totaltype" unset="true"/>
                  <basename property="testcase_totaltype" file="@{casetype}"/>
                  <var name="testcase_subtype" unset="true"/>
                  <basename property="testcase_subtype" file="@{casesubtype}"/>
                  <var name="testcase_type" value="${testcase_totaltype}_${testcase_subtype}"/>

                  <switch value="${testcase_type}">
                  
                     <case value="tdd_c">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_c_case.xml"/>
                     </case>
                     <case value="tdd_cpp">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_c_case.xml"/>
                     </case>
                     <case value="driver_c">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_c_case.xml"/>
                     </case>
                     <case value="driver_cpp">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_c_case.xml"/>
                     </case>
                     
                     <case value="story_java">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_java_case.xml"/>
                     </case>
                     <case value="sdv_java">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_java_case.xml"/>
                     </case>
                     <case value="driver_java">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_java_case.xml"/>
                     </case>
                     
                     <case value="story_js">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_js_case.xml"/>
                     </case>
                     <case value="sdv_js">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_js_case.xml"/>
                     </case>
                     
                     <case value="tdd_php">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_php_case.xml"/>
                     </case>
                     <case value="driver_php">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_php_case.xml"/>
                     </case>

                     <case value="driver_python">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_python_case_new.xml"/>
                     </case>
   
                     <case value="tdd_mongoc">
                        <var name="exec_file" value="${basedir}/src/test/exec_testcase/exec_mongoc_case.xml"/>
                     </case>
                     
                     <default>
                     </default>
                 
                  </switch>
                  
                  <if>
                     <or>
                        <contains string="&quot;${TESTCASE_TYPE}&quot;" substring="&quot;${testcase_type},"/>
                        <contains string="&quot;${TESTCASE_TYPE}&quot;" substring=",${testcase_type},"/>
                        <contains string="&quot;${TESTCASE_TYPE}&quot;" substring=",${testcase_type}&quot;"/>
                        <contains string="&quot;${TESTCASE_TYPE}&quot;" substring="&quot;${testcase_type}&quot;"/>
                     </or>
                     <then>
                        <if>
                           <not>
                              <equals arg1="${is_break}" arg2="true"/>
                           </not>
                           <then>
                              <ant antfile="${exec_file}" inheritAll="false">
                                 <property name="TEST_TYPE" value="${TEST_TYPE}"/>
                                 <property name="testcase_type" value="${testcase_type}"/>
                                 <property name="testcase_dir" value="@{casesubtype}"/>
                                 <property name="report_dir" value="${report_basedir}/${testcase_type}" />
                                 <property name="plat_form" value="${plat_form}"/>
                                 <property name="DEPLOY_MODE" value="${DEPLOY_MODE}"/>
                                 <property name="BUILD_NUMBER" value="${BUILD_NUMBER}"/>
                                 <property name="DBREAK_ON_FAILURE" value="${DBREAK_ON_FAILURE}"/>
                              </ant>
                      
                              <available property="is_exist" file="${report_basedir}/${testcase_type}/.TESTCASE_FAIL" type="file"/>
                              <condition property="is_break">
                                 <and>
                                    <equals arg1="${is_exist}" arg2="true"/>
                                    <equals arg1="${BREAK_ON_FAILURE}" arg2="true"/>
                                 </and>
                              </condition>

                              <copy todir="${WORKSPACE}/report/${testcase_type}">
                                 <fileset dir="${report_basedir}/${testcase_type}" includes="**/*"/>
                              </copy>

                           </then>
                        </if>
                     </then>
                  </if>
               </sequential>
            </for>           
         </sequential>
      </for>

      <copy todir="${WORKSPACE}/report">
         <fileset dir="${report_basedir}" includes="**/*"/>
      </copy>  

   </target>
   
   <target name="check_parameter">  
      <if>
         <isset property="TESTCASE_TYPE"/>
         <else>           
            <var name="TESTCASE_TYPE" value="tdd_c,tdd_cpp,tdd_php,tdd_mongoc,
                                             story_java,story_js,
                                             sdv_java,sdv_js,
                                             driver_c,driver_cpp,driver_java,driver_php,driver_python" />
         </else>
      </if>
      <if>
         <isset property="DEPLOY_MODE"/>
         <else>
            <var name="DEPLOY_MODE" value="G3D3" />
         </else>
      </if>
   </target>
   
</project>