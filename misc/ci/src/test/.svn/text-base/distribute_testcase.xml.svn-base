<project basedir="../../">  
   <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
         <pathelement location="${basedir}/lib/ant-contrib-1.0b2.jar" />
      </classpath>
   </taskdef>
   
   <!--delete other type of testcase-->  
   <macrodef name="filtercase">
      <attribute name="casedir"/>
      <attribute name="selectedcaselist" />
      <attribute name="casereltdir"/>
      <attribute name="testtype" default="normal_test"/>
      <sequential>
         <var name="caselist" value=""/>
         <var name="classeslist" value=""/>
         <for list="@{selectedcaselist}" param="feature" delimiter=",">
            <sequential>
               <if>
                  <contains string="@{casereltdir}" substring="/c"/>
                  <then>
                     <propertyregex property="casename" input="@{feature}" regexp="(.*)@{casereltdir}/(.*)/(.*).cpp" select="\3"/>
                  </then>
                  <elseif>
                     <contains string="@{casereltdir}" substring="/java"/>
                     <then>
                        <propertyregex property="casename" input="@{feature}" regexp="(.*)@{casereltdir}/(.*).java" select="\2"/>
                        <propertyregex property="classname" input="${casename}" regexp="/" replace="."/>           
                        <switch value="@{testtype}">
                           <case value="normal_test">
                              <var name="xmlfilename" value="testng.xml"/>
                           </case>
                           <case value="largedata_test">
                              <var name="xmlfilename" value="largedata.xml"/>
                           </case>
                           <case value="configure_test">
                              <var name="xmlfilename" value="configure.xml"/>
                           </case>
                           <case value="sync_test">
                              <var name="xmlfilename" value="sync.xml"/>
                           </case>
                           <case value="smoke_test">
                              <var name="xmlfilename" value="smoke.xml"/>
                           </case>
                        </switch>
                        <exec executable="sed">
                           <arg value="-i"/>
                           <arg line="'/packages/d' @{casedir}/${xmlfilename}"/>
                        </exec>
                        <exec executable="sed">
                           <arg value="-i"/>
                           <arg line="'/package name/d' @{casedir}/${xmlfilename}"/>
                        </exec>
                        <if>
                           <isset property="classname"/>
                           <then>
                              <var name="classeslist" value="${classeslist}\n&lt;class name=&quot;${classname}&quot;/&gt;"/>
                           </then>
                        </if>
                     </then>
                  </elseif>
                  <else>
                     <propertyregex property="casename" input="@{feature}" regexp="(.*)@{casereltdir}/(.*)" select="\2"/>
                  </else>
               </if>
               
               <if>
                  <equals arg1="${caselist}" arg2=""/>
                  <then>
                     <var name="caselist" value="${casename}"/>
                  </then>
                  <else>
                     <var name="caselist" value="${caselist},${casename}"/>
                  </else>
               </if>
               <var name="casename" unset="true"/>
               <var name="classname" unset="true"/>
            </sequential>
         </for>

         <if>
            <not>
               <equals arg1="@{selectedcaselist}" arg2=""/>
            </not>
            <then>
               <exec executable="sed">
                  <arg value="-i"/>
                  <arg line=" '/&lt;\/suite&gt;/i\\&lt;test name=&quot;classtest&quot;&gt;\n&lt;classes&gt;\n${classeslist}\n&lt;/classes&gt;\n&lt;/test&gt;' @{casedir}/${xmlfilename}"/>
               </exec>
            </then>
         </if>

         <var name="total_conf" unset="true"/>
         <loadfile property="total_conf" srcFile="@{casedir}/testcase.conf" failonerror="false"/>
         
         <if>
            <contains string="${total_conf}" substring="No filtering testcase"/>
         <else>   
            <var name="large_data_list" unset="true"/>
            <var name="sync_list" unset="true"/>
            <var name="configure_list" unset="true"/> 
            <var name="reliability_list" unset="true"/>
            <var name="smoke_list" unset="true"/>
            <var name="common_list" unset="true"/>         
            <property file="@{casedir}/testcase.conf"/>

            <switch value="@{testtype}">
            
               <case value="normal_test">
                  <for list="${large_data_list},${sync_list},${configure_list},${reliability_list}" param="feature">
                     <sequential>
                        <delete dir="@{casedir}/@{feature}" failonerror="false"/>                     
                        <delete file="@{casedir}/@{feature}" failonerror="false"/>
                        <delete file="@{casedir}/@{feature}.static" failonerror="false"/>
                     </sequential>
                  </for>
                  <if>
                     <equals arg1="@{selectedcaselist}" arg2=""/>
                     <else>
                        <var name="excludelist" unset="true" />
                        <var name="excludelist" value="" />
                        <for list="${common_list}" param="feature">
                           <sequential>
                              <var name="excludepathfile" value="@{feature}/**/*,@{feature},@{feature}.static" />
                              <var name="excludelist" value="${excludelist},${excludepathfile}"/>
                           </sequential>
                        </for>
                        <echo message="excludelist: ${excludelist}"/>
                        <delete includeEmptyDirs="true">
                           <fileset dir="@{casedir}" excludes="testcase.conf,*node.conf,${excludelist},${caselist}"/>
                        </delete>
                     </else>
                  </if>
               </case>
               
               <case value="largedata_test">
                  <var name="excludelist" unset="true" />
                  <var name="excludelist" value="" />
                 
                  <for list="${large_data_list}" param="feature">
                     <sequential>
                        <var name="excludepathfile" value="@{feature}/**/*,@{feature},@{feature}.static" />
                        <var name="excludelist" value="${excludelist},${excludepathfile}"/>
                     </sequential>
                  </for>
                  <for list="${common_list}" param="feature">
                     <sequential>
                        <var name="excludepathfile" value="@{feature}/**/*,@{feature},@{feature}.static" />
                        <var name="excludelist" value="${excludelist},${excludepathfile}"/>
                     </sequential>
                  </for>
                  <delete includeEmptyDirs="true">
                     <fileset dir="@{casedir}" excludes="testcase.conf,*node.conf,${excludelist}"/>
                  </delete>
                  <!--delete other testcase by testcaselist-->
                  <if>
                     <not>
                        <equals arg1="@{selectedcaselist}" arg2=""/>
                     </not>
                     <then>
                        <delete includeEmptyDirs="true">
                           <fileset dir="@{casedir}" excludes="testcase.conf,*node.conf,${caselist}"/>
                        </delete>
                     </then>
                  </if>
               </case>
               
               <case value="configure_test">
                  <var name="excludelist" unset="true" />
                  <var name="excludelist" value="" />
                  <for list="${configure_list}" param="feature">
                     <sequential>
                        <var name="excludepathfile" value="@{feature}/**/*,@{feature},@{feature}.static" />
                        <var name="excludelist" value="${excludelist},${excludepathfile}"/>
                     </sequential>
                  </for>
                  <for list="${common_list}" param="feature">
                     <sequential>
                        <var name="excludepathfile" value="@{feature}/**/*,@{feature},@{feature}.static" />
                        <var name="excludelist" value="${excludelist},${excludepathfile}"/>
                     </sequential>
                  </for>
                  <delete includeEmptyDirs="true">
                     <fileset dir="@{casedir}" excludes="testcase.conf,*node.conf,${excludelist}"/>
                  </delete>
                  <!--delete other testcase by testcaselist-->
                  <if>
                     <not>
                        <equals arg1="@{selectedcaselist}" arg2=""/>
                     </not>
                     <then>
                        <delete includeEmptyDirs="true">
                           <fileset dir="@{casedir}" excludes="testcase.conf,*node.conf,${caselist}"/>
                        </delete>
                     </then>
                  </if>

               </case>

               <case value="sync_test">
                  <var name="excludelist" unset="true" />
                  <var name="excludelist" value="" />
                  <for list="${sync_list}" param="feature">
                     <sequential>
                        <var name="excludepathfile" value="@{feature}/**/*,@{feature},@{feature}.static" />
                        <var name="excludelist" value="${excludelist},${excludepathfile}"/>
                     </sequential>
                  </for>
                  <for list="${common_list}" param="feature">
                     <sequential>
                        <var name="excludepathfile" value="@{feature}/**/*,@{feature},@{feature}.static" />
                        <var name="excludelist" value="${excludelist},${excludepathfile}"/>
                     </sequential>
                  </for>
                  <delete includeEmptyDirs="true">
                     <fileset dir="@{casedir}" excludes="lib/**/*,test-mongo,testcase.conf,${excludelist}"/>
                  </delete>
                  <!--delete other testcase by testcaselist-->
                  <if>
                     <not>
                        <equals arg1="@{selectedcaselist}" arg2=""/>
                     </not>
                     <then>
                        <delete includeEmptyDirs="true">
                           <fileset dir="@{casedir}" excludes="lib/**/*,test-mongo,testcase.conf,${caselist}"/>
                        </delete>
                     </then>
                  </if>
               </case>
           
               <case value="smoke_test">
                  <var name="excludelist" unset="true" />
                  <var name="excludelist" value="" />
                  <for list="${smoke_list}" param="feature">
                     <sequential>
                        <var name="excludepathfile" value="@{feature}/**/*,@{feature},@{feature}.static" />
                        <var name="excludelist" value="${excludelist},${excludepathfile}"/>
                     </sequential>
                  </for>
                  <for list="${common_list}" param="feature">
                     <sequential>
                        <var name="excludepathfile" value="@{feature}/**/*,@{feature},@{feature}.static" />
                        <var name="excludelist" value="${excludelist},${excludepathfile}"/>
                     </sequential>
                  </for>
                  <delete includeEmptyDirs="true">
                     <fileset dir="@{casedir}" excludes="testcase.conf,*node.conf,${excludelist}"/>
                  </delete>
                  <if>
                     <not>
                        <equals arg1="@{selectedcaselist}" arg2=""/>
                     </not>
                     <then>
                        <delete includeEmptyDirs="true">
                           <fileset dir="@{casedir}" excludes="testcase.conf,*node.conf,${excludelist}"/>
                        </delete>
                     </then>
                  </if>
               </case>
     
               <default/>

            </switch>
            
            <if>
               <equals arg1="@{testtype}" arg2="sync_test"/>
               <else>
                  <delete includeEmptyDirs="true" failonerror="false"><!--java directory did not have testcase.conf  tmp-->
                     <fileset dir="@{casedir}" includes="testcase.conf"/>
                  </delete>
               </else>
            </if>

            <delete includeEmptyDirs="true" failonerror="false"><!--delete empty directory-->
               <fileset dir="@{casedir}" >
                  <and>
                     <size value="0"/>
                     <type type="dir"/>
                  </and>
               </fileset>       
            </delete>
            
         </else>
         </if>
         
      </sequential>
   </macrodef>
   
   <macrodef name="arraylen">        
      <attribute name="array"/>
      <attribute name="len"/>         
      <sequential>           
         <var name="@{len}" value="0"/>
         <for list="@{array}" param="ele" parallel="false">
            <sequential>                 
               <math result="@{len}" operand1="${@{len}}" operation="+" operand2="1" datatype="int"/>
            </sequential>
         </for>
      </sequential>
   </macrodef>
      
   <macrodef name="dividecase">
      <attribute name="basedir"/>
      <attribute name="reltdir"/>
      <attribute name="outputdir"/>
      <attribute name="hostlist"/>
      <element name="dividedfileele"/>
      <element name="commonfileele"/>
      <sequential>
         <var name="testcase_dir" value="@{basedir}/@{reltdir}" />
         <!--1.calculate file number-->
         <arraylen array="@{hostlist}" len="part_num"/>
         <path id="divided_path">
            <dividedfileele/>              
         </path>      
         <var name="total_filenum" unset="true" />
         <resourcecount property="total_filenum">
            <path refid="divided_path" />
         </resourcecount>
         <var name="part_filenum" unset="true"/>
         <echo>total_filenum:${total_filenum}, partnum:${part_num}, part_filenum:${part_filenum}</echo>
         <math result="part_filenum" 
               operand1="${total_filenum}" 
               operation="/" 
               operand2="${part_num}" 
               datatype="int"/>
         <echo>total_filenum:${total_filenum}, partnum:${part_num}, part_filenum:${part_filenum}</echo>
         
         <!--2.divide a set of files into parts-->        
         <if>
            <equals arg1="${total_filenum}" arg2="0" />
            <then/>
            <else>
               <var name="i" value="0"/>
               <for list="@{hostlist}" param="testhost" parallel="false">
                  <sequential>            
                     <math result="i" operand1="${i}" operation="+" operand2="1" datatype="int"/>
                     <var name="outputdir" value="@{outputdir}/testcase_@{testhost}" />          
                     <mkdir dir="${outputdir}/"/>           
                     <if>
                        <equals arg1="${i}" arg2="${part_num}" />
                        <then><!--in last part, just move directory-->
                           <move todir="${outputdir}">
                              <fileset dir="@{basedir}">
                                 <include name="@{reltdir}/**/*" />
                              </fileset>
                           </move>
                        </then>
                        <else>
                           <timestampselector outputsetid="part_path" count="${part_filenum}" >
                              <path refid="divided_path" />
                           </timestampselector>                     
                           <var name="tmp_dir" value="${outputdir}_tmp" />
                           <mkdir dir="${tmp_dir}/"/>                  
                           <move todir="${tmp_dir}" overwrite="true" flatten="false" >
                              <path refid="part_path" />
                           </move>
                           <copy todir="${tmp_dir}/${testcase_dir}" overwrite="true" >
                              <commonfileele/>
                           </copy>
                           <echo>${outputdir}</echo>
                           <echo>${tmp_dir}/@{basedir}</echo>
                           <move todir="${outputdir}">
                              <fileset dir="${tmp_dir}/@{basedir}"/>
                           </move>
                           <delete dir="${tmp_dir}" />
                        </else>
                     </if>
                  </sequential>
               </for>
            </else>
         </if>
      </sequential>
   </macrodef>

   
</project>